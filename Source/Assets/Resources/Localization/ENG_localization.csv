"_avatar","Choose your avatar!"
"_back","Back"
"_back_to_menu","Back to menu"
"_bad_ip_address","This is not a valid Ip address."
"_bad_password","Password must be between 8 and 20 characters long with NO commas or whitespace."
"_bad_request","The server rejected the connection, either wrong credentials or that username was already connected to the server.<br>It is also possible that the connection with the server was interrupted."
"_bad_username","Username must be between 1 and 20 characters long with NO commas or whitespace."
"_buy","Buy"
"_clear","Clear"
"_client","Client"
"_continue_player","Continue<br>as player"
"_continue_server","Continue<br>as server"
"_correct_doubt","Correct Doubt"
"_correct_output","Correct output value"
"_correct_result","Correct result: "
"_cosmetic_description","The more points you have, the more avatars you can choose from!<br>Any avatar that you choose will be shown to all the other player in your lobby!<br>Finishing a game session will always award you with some points, but you will get more if you end up in the top 3."
"_cpp_description","The game lets you create a .cpp file containing yours, or the best, solution. Choose the folder here and press export when in game."
"_cpp_directory","Cpp directory"
"_crash","Crash"
"_create_account","Create new account"
"_current_ip_address","The players need to connect to this Ip address:"
"_current_leaderboard","Current Leaderboard"
"_currently_have","You currently have: "
"_default_path","Default path"
"_disconnect","Disconnect"
"_doubt","Doubt"
"_doubt_description","It is time to create your doubts!<br>Click on the user avatars on the left to read their solutions and, if you find a mistake, create a doubt by pressing the button up top!"
"_doubts_received","Doubts received:"
"_expected","expected"
"_export","Export"
"_export_all_solution","Export all solutions"
"_export_best_solution","Export best solution"
"_export_my_solution","Export my solution"
"_goal","Goal"
"_got_it","Got it!"
"_half_doubt","Half Doubt"
"_hint","Hint"
"_hints","Hints"
"_how_to_play","How to play"
"_i_expected","I expect:"
"_input_arguments","Input arguments"
"_input_given","when given the following input: "
"_instead","instead of returning:"
"_instead_correct_output","Instead of the correct output:"
"_leaderboard_description","The final leaderboard will depend on the results of the final test battery, everything can still change!"
"_loading","Loading"
"_lobby","Lobby"
"_localization_description","Click on the flag to change the language!"
"_log","Log"
"_next_time_avatar","Here are the avatars that you will be able to choose from next time:"
"_no_compile","Does not compile"
"_no_doubt","No Doubt"
"_not_compile","not compile"
"_not_expected","did not doubt"
"_password","Password"
"_play","Play"
"_player","Player"
"_points","Points"
"_progress_until_next_round","Progress until next round"
"_question_solved","CodeQuestion solved:"
"_ready","Ready"
"_ready_players","Ready Players"
"_requires","Requires:"
"_remove_doubt","Remove doubt against<br> current player"
"_return","return"
"_save_best_solution","Save the first place' solution to compare!"
"_save_my_solution","Save your solution to review it later!"
"_seconds","Seconds"
"_select_code_question","Select the codeQuestion for this session!"
"_select_ip_address","Choose the Ip address of the server:"
"_select_timer","Select the amount of time that the players will receive to create a solution."
"_selected_ip_address","This is a valid Ip address."
"_server","Server"
"_server_address_description","The red box contains the Ipv4 address of the server.<br>It is very important that you share it with your players."
"_server_code_question_description","The blue box contains the possible codeQuestions that the players can face, click on one to select it.<br>In the white space you can insert any tag combination to filter the possible codeQuestions by it."
"_server_control_panel","Server control panel"
"_server_settings","Server settings"
"_server_timer_description","The green box contains the maximum amount of time that the players can take to solve a codeQuestion.<br>If nothing is inserted a default value will be used."
"_session_description","Each session requires one server and between 2 and 24 players."
"_session_recap","Number of players that participated:"
"_settings","Settings"
"_solution","Solution to"
"_solution_result","Solution result: "
"_start","Start"
"_starting_prize","Starting prize:"
"_terrible_doubt","Both Wrong"
"_test","Test"
"_this_session","This session:"
"_timeout","Timeout"
"_time","time"
"_timeout_description","The game will stop any test that might be in an infinite loop by using this variable. In rare cases, on very slow machines, it is possible that some false positives would abort a legitimate execution, if this happens, increase this variable, but keep in mind that, for an execution that actually wont terminate, a bigger timeout means more time wasted that could be spent improving your solution."
"_time_left","Time left:"
"_tutorial_0","Main menu<br>Red: Quit the game, Purple: Login credential, either known or new, Blue: Toggle to swap between known credentials and new credentials, Cyan: Attempt to connect to the server with the inserted credentials, Yellow: Insert the Ipv4 address given to you by the server (MANDATORY), Green: Opens this tutorial, Orange: Opens the settings."
"_tutorial_1","First round, type in the notepad the solution to the codeQuestion that you have been shown.<br>Red: Creates a cpp file of your solution in the path that you specified in the settings, Purple: Starts compilation and basic test battery against your solution, Blue: Opens the hint panel where you can buy some hints at the cost of some points (In case you forgot, the codeQuestion request can also be found here), Green: Opens the log where all the communications about compilation and execution is stored, Yellow: The timer shows how much time you have left before being forced to submit your solution, Orange: Notifies the server that you are finished (If you press it before the others you will be higher in the first round leaderboard), Cyan: Zoom buttons for the notepad."
"_tutorial_2","Second round, click on the avatars on the left to see the other players' solutions, take note of any mistake and then press 'Doubt' to open the doubt panel.<br> Red: Zoom buttons for the notepad, Purple: Opens the doubt panel, Blue: Player list (In order of readyness), Cyan: The timer shows how much time you have left before being forced to abandon doubting."
"_tutorial_3","The Doubt panel, select an input where you think the selected solution would not return the correct output, then fill the doubt fields accordingly.<br>Red: Returns to the previous screen, Purple: After having doubted a player's solution it is possible to remove it by pressing this button, Blue: The input that you think will fail the player's solution (MANDATORY), Cyan: What do you think the solution will do once given your input? Return a wrong value, no compile at all, timing out or crashing with an exception or worse (MANDATORY, AT LEAST ONE), Green: What is the correct output when given your input? To consider the doubt completely correct you also have to know this! (MANDATORY), Orange: Confirm the doubt with the above parameters (Doubts against the same player will be overwritten by the latest one)."
"_tutorial_4","Slideshow, the game has ended, now the points will be calculated by showing everyone all the solutions and doubts.<br>Red: The list of targets of doubts, Purple: The list of doubters, Blue: Explicit usernames of the current doubt, Cyan: Doubt specifics, Green: solution result and server result when given the same input, Yellow: Final doubt grading."
"_tutorial_5","Final leaderboard, congratulation this session is finished, you will earn points depending on your performance, the more points you have the more avatar you will be able to choose from.<br>Red: Disconnect safely from the server, Purple: Save your solution in the path you specified in the settings, Blue: Save the solution of the player in first place in the path that you specified in the settings, Green: The final leaderboard."
"_unknown","Unknown"
"_username","Username"
"_volume","Volume"
"_waiting_slideshow","Waiting for the doubts' slideshow to finish..."
"_with_input","With input:"
"_wrong_doubt","Wrong Doubt"
"_wrong_output","Wrong output value"
"_slopeBetween2Points_description","Given in input the coordinates of 2 points on a plane, return the slope of the line passing trought them."
"_slopeBetween2Points_hint_1","Just like in math, the coordinates are just numbers, you only need 3 operations to find the slope of the line passing trough 2 points."
"_slopeBetween2Points_hint_2","If you don't use variables to store some partial result, you will need to use some parentheses since, without them, multiplication and division are always executed before addition and subtraction."
"_triangleArea_description","Given in input the base an height of a triangle, return the area of the triangle."
"_triangleArea_hint_1","Just like in math, base and height are just values that you can insert in any formula."
"_chainingConditions_description","Given in input the number of false and true booleans to be chained and which operation to chain them, return the final result of the evaluation.<br>The only allowed operations are 'and', 'or' and 'not', return false when the chaining of booleans does not make sense."
"_chainingConditions_hint_1","Think about what is the minimum requirement to return true given some booleans, true and false is false but true or false is true."
"_chainingConditions_hint_2","It doesn't really make sense to have more than one boolean when the operation is 'not', the negation operation is unary and as such can't be use for any chaining."
"_sumOf2Bits_description","Given in input the amount of bits you have for storage and the value of 2 booleans bits, return if their sum can fit in the storage at your disposal."
"_sumOf2Bits_hint_1","Think about what happens when the 2 booleans are both true, they are representing a 1 each and by summing them you would get a 2, can you fit that in 1 bit?"
"_sumOf2Bits_hint_2","What about when the 2 booleans are both false, they are representing a 0 each and by summing them you would get a 0, is it possible to store a 0 in 0 bits?"
"_limitChecking_description","Given in input a main int, 2 ints representing the lower and upper limit and an helper float, return if the main int is contained between the limits.<br>The int can be modified only once by either multiplying or dividing it with the helper float before answering.<br>Furthermore, after using the helper you should round the result towards the limit."
"_limitChecking_hint_1","Remember that the library 'math.h' offers 3 rounding functions: 'ceil', 'round' and 'floor', but they all differ in the way their rounding works, for this function you will only need 2 of them."
"_limitChecking_hint_2","Did you take into account that helper could be between 0 and 1? Multiplication and division would swap in that case!"
"_helloWorld_description","Given in input an int, return the string 'Hello world' followed by as many '!' as the value of the int."
"_helloWorld_hint_1","Remember that the '+' operation can be used to concatenate string with strings and string with chars."
"_fibonacci_description","Given in input an int, return the number in the fibonacci sequence at the index of the value of the int.<br>The fibonacci sequence starts from index 0 with 0, 1, 1, 2, 3... where every number in the sequence is equal to the sum of the 2 previous ones."
"_fibonacci_hint_1","The easiest way to calculate the fibonacci sequence is by using recursion, just make sure to change the argument every time you call the function."
"_fibonacci_hint_2","Did you take into account the base cases? Without a stopping point, your code would be stuck forever, think about which values in the sequence do not depend from the 2 previous numbers."
"_structTraversal_description","Given in input the number of left turns that you have to take, return the sum of the values encountered, after you finishing the left turns you should continue as much as you can with right turns.<br>You will be able to access a variable of type 'Node*' called 'root', it contains 3 pointers, one called 'left' which represent a left turn, one called 'right' which represent a right turn and one called 'value' that represents its value, 'left' and 'right' point to a different 'Node*', if one exists."
"_structTraversal_hint_1","Working with pointers can be confusing, accessing a 'Node*' value with node->value will return an int, but node->left will return another 'Node*' or 'nullptr'."
"_structTraversal_hint_2","It is possible to traverse a list of pointers by using the same data structure, by creating a 'Node*' and setting it equal to 'root' you can now access 'left' of the new variable and receive the same pointer as if you had done root->left."
"_structTraversal_hint_3","Did you take into account the 'root' initial value?"
