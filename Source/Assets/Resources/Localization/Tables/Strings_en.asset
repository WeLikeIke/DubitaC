%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: e9620f8c34305754d8cc9a7e49e852d9, type: 3}
  m_Name: Strings_en
  m_EditorClassIdentifier: 
  m_LocaleId:
    m_Code: en
  m_SharedData: {fileID: 11400000, guid: 2bd8424e499ac664187c1539b8322694, type: 2}
  m_Metadata:
    m_Items:
    - id: 0
  m_TableData:
  - m_Id: 912167268382
    m_Localized: Did you take into account the 'root' initial value?
    m_Metadata:
      m_Items: []
  - m_Id: 912167268381
    m_Localized: It is possible to traverse a list of pointers by using the same
      data structure, by creating a 'Node*' and setting it equal to 'root' you can
      now access 'left' of the new variable and receive the same pointer as if you
      had done root->left.
    m_Metadata:
      m_Items: []
  - m_Id: 912167268380
    m_Localized: Working with pointers can be confusing, accessing a 'Node*' value
      with node->value will return an int, but node->left will return another 'Node*'
      or 'nullptr'.
    m_Metadata:
      m_Items: []
  - m_Id: 912167268379
    m_Localized: Given in input the number of left turns that you have to take, return
      the sum of the values encountered, after you finishing the left turns you should
      continue as much as you can with right turns.<br>You will be able to access
      a variable of type 'Node*' called 'root', it contains 3 pointers, one called
      'left' which represent a left turn, one called 'right' which represent a right
      turn and one called 'value' that represents its value, 'left' and 'right' point
      to a different 'Node*', if one exists.
    m_Metadata:
      m_Items: []
  - m_Id: 912167268378
    m_Localized: Did you take into account the base cases? Without a stopping point,
      your code would be stuck forever, think about which values in the sequence
      do not depend from the 2 previous numbers.
    m_Metadata:
      m_Items: []
  - m_Id: 912167268377
    m_Localized: The easiest way to calculate the fibonacci sequence is by using
      recursion, just make sure to change the argument every time you call the function.
    m_Metadata:
      m_Items: []
  - m_Id: 912167268376
    m_Localized: Given in input an int, return the number in the fibonacci sequence
      at the index of the value of the int.<br>The fibonacci sequence starts from
      index 0 with 0, 1, 1, 2, 3... where every number in the sequence is equal to
      the sum of the 2 previous ones.
    m_Metadata:
      m_Items: []
  - m_Id: 912167268375
    m_Localized: Remember that the '+' operation can be used to concatenate string
      with strings and string with chars.
    m_Metadata:
      m_Items: []
  - m_Id: 912167268374
    m_Localized: Given in input an int, return the string 'Hello world' followed
      by as many '!' as the value of the int.
    m_Metadata:
      m_Items: []
  - m_Id: 912167268373
    m_Localized: Did you take into account that helper could be between 0 and 1?
      Multiplication and division would swap in that case!
    m_Metadata:
      m_Items: []
  - m_Id: 912167268372
    m_Localized: 'Remember that the library ''math.h'' offers 3 rounding functions:
      ''ceil'', ''round'' and ''floor'', but they all differ in the way their rounding
      works, for this function you will only need 2 of them.'
    m_Metadata:
      m_Items: []
  - m_Id: 912167268371
    m_Localized: Given in input a main int, 2 ints representing the lower and upper
      limit and an helper float, return if the main int is contained between the
      limits.<br>The int can be modified only once by either multiplying or dividing
      it with the helper float before answering.<br>Furthermore, after using the
      helper you should round the result towards the limit.
    m_Metadata:
      m_Items: []
  - m_Id: 912167268370
    m_Localized: What about when the 2 booleans are both false, they are representing
      a 0 each and by summing them you would get a 0, is it possible to store a 0
      in 0 bits?
    m_Metadata:
      m_Items: []
  - m_Id: 912167268369
    m_Localized: Think about what happens when the 2 booleans are both true, they
      are representing a 1 each and by summing them you would get a 2, can you fit
      that in 1 bit?
    m_Metadata:
      m_Items: []
  - m_Id: 912167268368
    m_Localized: Given in input the amount of bits you have for storage and the value
      of 2 booleans bits, return if their sum can fit in the storage at your disposal.
    m_Metadata:
      m_Items: []
  - m_Id: 912167268367
    m_Localized: It doesn't really make sense to have more than one boolean when
      the operation is 'not', the negation operation is unary and as such can't be
      use for any chaining.
    m_Metadata:
      m_Items: []
  - m_Id: 912167268366
    m_Localized: Think about what is the minimum requirement to return true given
      some booleans, true and false is false but true or false is true.
    m_Metadata:
      m_Items: []
  - m_Id: 912167268365
    m_Localized: Given in input the number of false and true booleans to be chained
      and which operation to chain them, return the final result of the evaluation.<br>The
      only allowed operations are 'and', 'or' and 'not', return false when the chaining
      of booleans does not make sense.
    m_Metadata:
      m_Items: []
  - m_Id: 912167268364
    m_Localized: Just like in math, base and height are just values that you can
      insert in any formula.
    m_Metadata:
      m_Items: []
  - m_Id: 912167268363
    m_Localized: Given in input the base an height of a triangle, return the area
      of the triangle.
    m_Metadata:
      m_Items: []
  - m_Id: 912167268362
    m_Localized: If you don't use variables to store some partial result, you will
      need to use some parentheses since, without them, multiplication and division
      are always executed before addition and subtraction.
    m_Metadata:
      m_Items: []
  - m_Id: 912167268361
    m_Localized: Just like in math, the coordinates are just numbers, you only need
      3 operations to find the slope of the line passing trough 2 points.
    m_Metadata:
      m_Items: []
  - m_Id: 912167268360
    m_Localized: Given in input the coordinates of 2 points on a plane, return the
      slope of the line passing trought them.
    m_Metadata:
      m_Items: []
  - m_Id: 912167268359
    m_Localized: Wrong output value
    m_Metadata:
      m_Items: []
  - m_Id: 912167268358
    m_Localized: Wrong Doubt
    m_Metadata:
      m_Items: []
  - m_Id: 912167268357
    m_Localized: 'When given in input:'
    m_Metadata:
      m_Items: []
  - m_Id: 912167268356
    m_Localized: Waiting for the doubts' slideshow to finish...
    m_Metadata:
      m_Items: []
  - m_Id: 912167268355
    m_Localized: Volume
    m_Metadata:
      m_Items: []
  - m_Id: 912167268354
    m_Localized: Username
    m_Metadata:
      m_Items: []
  - m_Id: 912167268353
    m_Localized: returned an unknown value
    m_Metadata:
      m_Items: []
  - m_Id: 912167268352
    m_Localized: 'Final leaderboard, congratulation this session is finished, you
      will earn points depending on your performance, the more points you have the
      more avatar you will be able to choose from.<br>Red: Disconnect safely from
      the server, Purple: Save your solution in the path you specified in the settings,
      Blue: Save the solution of the player in first place in the path that you specified
      in the settings, Green: The final leaderboard.'
    m_Metadata:
      m_Items: []
  - m_Id: 912163074144
    m_Localized: 'Slideshow, the game has ended, now the points will be calculated
      by showing everyone all the solutions and doubts.<br>Red: The list of targets
      of doubts, Purple: The list of doubters, Blue: All the details regarding a
      doubt and its executions, Yellow: Final doubt grading.'
    m_Metadata:
      m_Items: []
  - m_Id: 912163074143
    m_Localized: 'The Doubt panel, select an input where you think the selected solution
      would not return the correct output, then fill the doubt fields accordingly.<br>Red:
      Returns to the previous screen, Purple: After having doubted a player''s solution
      it is possible to remove it by pressing this button, Blue: The input that you
      think will fail the player''s solution, Cyan: What do you think the solution
      will do once given your input? Return a wrong value, no compile at all, timing
      out or crashing with an exception or worse (MANDATORY), Yellow: The wrong value
      returned by the solution, Green: What is the correct output when given your
      input? To consider the doubt completely correct you also have to know this!
      (MANDATORY), Orange: Confirm the doubt with the above parameters (Doubts against
      the same player will be overwritten by the latest one).'
    m_Metadata:
      m_Items: []
  - m_Id: 912163074142
    m_Localized: 'Second round, click on the avatars on the left to see the other
      players'' solutions, take note of any mistake and then press ''Doubt'' to open
      the doubt panel.<br> Red: Zoom buttons for the notepad, Purple: Opens the doubt
      panel, Blue: Player list (In order of readyness), Cyan: The timer shows how
      much time you have left before being forced to abandon doubting.'
    m_Metadata:
      m_Items: []
  - m_Id: 912163074141
    m_Localized: 'First round, type in the notepad the solution to the codeQuestion
      that you have been shown.<br>Red: Creates a cpp file of your solution in the
      path that you specified in the settings, Purple: Starts compilation and basic
      test battery against your solution, Blue: Opens the hint panel where you can
      buy some hints at the cost of some points (In case you forgot, the codeQuestion
      request can also be found here), Green: Opens the log where all the communications
      about compilation and execution is stored, Yellow: The timer shows how much
      time you have left before being forced to submit your solution, Orange: Notifies
      the server that you are finished (If you press it before the others you will
      be higher in the first round leaderboard), Cyan: Zoom buttons for the notepad.'
    m_Metadata:
      m_Items: []
  - m_Id: 912163074140
    m_Localized: 'Main menu<br>Red: Quit the game, Purple: Login credential, either
      known or new, Blue: Toggle to swap between known credentials and new credentials,
      Cyan: Attempt to connect to the server with the inserted credentials, Yellow:
      Insert the Ipv4 address given to you by the server (MANDATORY), Green: Opens
      this tutorial, Orange: Opens the settings.'
    m_Metadata:
      m_Items: []
  - m_Id: 912163074139
    m_Localized: 'Time left:'
    m_Metadata:
      m_Items: []
  - m_Id: 912163074138
    m_Localized: The game will stop any test that might be in an infinite loop by
      using this variable. In rare cases, on very slow machines, it is possible that
      some false positives would abort a legitimate execution, if this happens, increase
      this variable, but keep in mind that, for an execution that actually wont terminate,
      a bigger timeout means more time wasted that could be spent improving your
      solution.
    m_Metadata:
      m_Items: []
  - m_Id: 912163074048
    m_Localized: Choose your avatar!
    m_Metadata:
      m_Items: []
  - m_Id: 912163074049
    m_Localized: Back
    m_Metadata:
      m_Items: []
  - m_Id: 912163074050
    m_Localized: Back to menu
    m_Metadata:
      m_Items: []
  - m_Id: 912163074051
    m_Localized: This is not a valid Ip address.
    m_Metadata:
      m_Items: []
  - m_Id: 912163074052
    m_Localized: Password must be between 8 and 20 characters long with NO commas
      or whitespace.
    m_Metadata:
      m_Items: []
  - m_Id: 912163074053
    m_Localized: The server rejected the connection, either wrong credentials or
      that username was already connected to the server.<br>It is also possible that
      the connection with the server was interrupted.
    m_Metadata:
      m_Items: []
  - m_Id: 912163074054
    m_Localized: Username must be between 1 and 20 characters long with NO commas
      or whitespace.
    m_Metadata:
      m_Items: []
  - m_Id: 912163074055
    m_Localized: Buy
    m_Metadata:
      m_Items: []
  - m_Id: 912163074056
    m_Localized: Clear
    m_Metadata:
      m_Items: []
  - m_Id: 912163074057
    m_Localized: Client
    m_Metadata:
      m_Items: []
  - m_Id: 912163074060
    m_Localized: Correct Doubt
    m_Metadata:
      m_Items: []
  - m_Id: 912163074061
    m_Localized: Correct output value
    m_Metadata:
      m_Items: []
  - m_Id: 912163074062
    m_Localized: 'Correct result: '
    m_Metadata:
      m_Items: []
  - m_Id: 912163074063
    m_Localized: The more points you have, the more avatars you can choose from!<br>Any
      avatar that you choose will be shown to all the other player in your lobby!<br>Finishing
      a game session will always award you with some points, but you will get more
      if you end up in the top 3.
    m_Metadata:
      m_Items: []
  - m_Id: 912163074064
    m_Localized: The game lets you create a .cpp file containing yours, or the best,
      solution. Choose the folder here and press export when in game.
    m_Metadata:
      m_Items: []
  - m_Id: 912163074065
    m_Localized: Cpp directory
    m_Metadata:
      m_Items: []
  - m_Id: 912163074066
    m_Localized: Crash
    m_Metadata:
      m_Items: []
  - m_Id: 912163074067
    m_Localized: Create new account
    m_Metadata:
      m_Items: []
  - m_Id: 912163074068
    m_Localized: 'The players need to connect to this Ip address: <b>{IpManager.address}</b>'
    m_Metadata:
      m_Items:
      - id: 0
  - m_Id: 912163074069
    m_Localized: Current Leaderboard
    m_Metadata:
      m_Items: []
  - m_Id: 912163074070
    m_Localized: 'You currently have:'
    m_Metadata:
      m_Items: []
  - m_Id: 912163074071
    m_Localized: Default path
    m_Metadata:
      m_Items: []
  - m_Id: 912163074072
    m_Localized: Disconnect
    m_Metadata:
      m_Items: []
  - m_Id: 912163074073
    m_Localized: Doubt
    m_Metadata:
      m_Items: []
  - m_Id: 912163074074
    m_Localized: It is time to create your doubts!<br>Click on the user avatars on
      the left to read their solutions and, if you find a mistake, create a doubt
      by pressing the button up top!
    m_Metadata:
      m_Items: []
  - m_Id: 912163074075
    m_Localized: 'Doubts received:'
    m_Metadata:
      m_Items: []
  - m_Id: 912163074076
    m_Localized: expected
    m_Metadata:
      m_Items: []
  - m_Id: 912163074077
    m_Localized: Export
    m_Metadata:
      m_Items: []
  - m_Id: 912163074078
    m_Localized: Export all solutions
    m_Metadata:
      m_Items: []
  - m_Id: 912163074079
    m_Localized: Export best solution
    m_Metadata:
      m_Items: []
  - m_Id: 912163074080
    m_Localized: Export my solution
    m_Metadata:
      m_Items: []
  - m_Id: 912163074081
    m_Localized: Goal
    m_Metadata:
      m_Items: []
  - m_Id: 912163074082
    m_Localized: Got it!
    m_Metadata:
      m_Items: []
  - m_Id: 912163074083
    m_Localized: Half Doubt
    m_Metadata:
      m_Items: []
  - m_Id: 912163074084
    m_Localized: Hint
    m_Metadata:
      m_Items: []
  - m_Id: 912163074085
    m_Localized: Hints
    m_Metadata:
      m_Items: []
  - m_Id: 912163074086
    m_Localized: How to play
    m_Metadata:
      m_Items: []
  - m_Id: 912163074087
    m_Localized: 'I expect the solution to:'
    m_Metadata:
      m_Items: []
  - m_Id: 912163074088
    m_Localized: Input arguments
    m_Metadata:
      m_Items: []
  - m_Id: 912163074089
    m_Localized: 'when given the following input: '
    m_Metadata:
      m_Items: []
  - m_Id: 912163074090
    m_Localized: 'instead of returning:'
    m_Metadata:
      m_Items: []
  - m_Id: 912163074092
    m_Localized: The final leaderboard will depend on the results of the final test
      battery, everything can still change!
    m_Metadata:
      m_Items: []
  - m_Id: 912163074093
    m_Localized: Loading
    m_Metadata:
      m_Items: []
  - m_Id: 912163074094
    m_Localized: Lobby
    m_Metadata:
      m_Items: []
  - m_Id: 912163074095
    m_Localized: Click on the flag to change the language!
    m_Metadata:
      m_Items: []
  - m_Id: 912163074096
    m_Localized: Log
    m_Metadata:
      m_Items: []
  - m_Id: 912163074097
    m_Localized: 'Here are the avatars that you will be able to choose from next
      time:'
    m_Metadata:
      m_Items: []
  - m_Id: 912163074098
    m_Localized: not compile
    m_Metadata:
      m_Items: []
  - m_Id: 912163074099
    m_Localized: No Doubt
    m_Metadata:
      m_Items: []
  - m_Id: 912163074100
    m_Localized: not compile
    m_Metadata:
      m_Items: []
  - m_Id: 912163074101
    m_Localized: did not doubt
    m_Metadata:
      m_Items: []
  - m_Id: 912163074102
    m_Localized: Password
    m_Metadata:
      m_Items: []
  - m_Id: 912163074137
    m_Localized: time
    m_Metadata:
      m_Items: []
  - m_Id: 912163074136
    m_Localized: Timeout
    m_Metadata:
      m_Items: []
  - m_Id: 912163074135
    m_Localized: 'This session:'
    m_Metadata:
      m_Items: []
  - m_Id: 912163074134
    m_Localized: Test
    m_Metadata:
      m_Items: []
  - m_Id: 912163074133
    m_Localized: Both Wrong
    m_Metadata:
      m_Items: []
  - m_Id: 912163074132
    m_Localized: 'Starting prize:'
    m_Metadata:
      m_Items: []
  - m_Id: 912163074131
    m_Localized: Start
    m_Metadata:
      m_Items: []
  - m_Id: 912163074130
    m_Localized: 'Solution result: '
    m_Metadata:
      m_Items: []
  - m_Id: 912163074129
    m_Localized: Solution to
    m_Metadata:
      m_Items: []
  - m_Id: 912163074128
    m_Localized: Settings
    m_Metadata:
      m_Items: []
  - m_Id: 912163074127
    m_Localized: 'Number of players that participated: {numberOfClients}'
    m_Metadata:
      m_Items:
      - id: 0
  - m_Id: 912163074126
    m_Localized: Each session requires one server and between 2 and 24 players.
    m_Metadata:
      m_Items: []
  - m_Id: 912163074125
    m_Localized: The green box contains the maximum amount of time that the players
      can take to solve a codeQuestion.<br>If nothing is inserted a default value
      will be used.
    m_Metadata:
      m_Items: []
  - m_Id: 912163074124
    m_Localized: Server settings
    m_Metadata:
      m_Items: []
  - m_Id: 912163074123
    m_Localized: Server control panel
    m_Metadata:
      m_Items: []
  - m_Id: 912163074122
    m_Localized: The blue box contains the possible codeQuestions that the players
      can face, click on one to select it.<br>In the white space you can insert any
      tag combination to filter the possible codeQuestions by it.
    m_Metadata:
      m_Items: []
  - m_Id: 912163074121
    m_Localized: The red box contains the Ipv4 address of the server.<br>It is very
      important that you share it with your players.
    m_Metadata:
      m_Items: []
  - m_Id: 912163074120
    m_Localized: Server
    m_Metadata:
      m_Items: []
  - m_Id: 912163074119
    m_Localized: This is a valid Ip address.
    m_Metadata:
      m_Items: []
  - m_Id: 912163074118
    m_Localized: Select the amount of time that the players will receive to create
      a solution.
    m_Metadata:
      m_Items: []
  - m_Id: 912163074117
    m_Localized: 'Choose the Ip address of the server:'
    m_Metadata:
      m_Items: []
  - m_Id: 912163074116
    m_Localized: Select the codeQuestion for this session!
    m_Metadata:
      m_Items: []
  - m_Id: 912163074115
    m_Localized: Seconds
    m_Metadata:
      m_Items: []
  - m_Id: 912163074114
    m_Localized: Save your solution to review it later!
    m_Metadata:
      m_Items: []
  - m_Id: 912163074113
    m_Localized: Save the first place' solution to compare!
    m_Metadata:
      m_Items: []
  - m_Id: 912163074112
    m_Localized: return
    m_Metadata:
      m_Items: []
  - m_Id: 912163074111
    m_Localized: Remove doubt against<br> current player
    m_Metadata:
      m_Items: []
  - m_Id: 912163074110
    m_Localized: 'Requires '
    m_Metadata:
      m_Items: []
  - m_Id: 912163074109
    m_Localized: Ready Players
    m_Metadata:
      m_Items: []
  - m_Id: 912163074108
    m_Localized: Ready
    m_Metadata:
      m_Items: []
  - m_Id: 912163074107
    m_Localized: CodeQuestion solved:<br><b>{solvedQuestion}</b>
    m_Metadata:
      m_Items:
      - id: 0
  - m_Id: 912163074106
    m_Localized: Progress until next round
    m_Metadata:
      m_Items: []
  - m_Id: 912163074105
    m_Localized: Points
    m_Metadata:
      m_Items: []
  - m_Id: 912163074104
    m_Localized: Player
    m_Metadata:
      m_Items: []
  - m_Id: 912163074103
    m_Localized: Play
    m_Metadata:
      m_Items: []
  - m_Id: 51189125738496
    m_Localized: Continue<br>as {currentBuild}
    m_Metadata:
      m_Items:
      - id: 0
  - m_Id: 91413029580800
    m_Localized: '{_currently_have} {AvatarManager.points} {_points}'
    m_Metadata:
      m_Items:
      - id: 0
  - m_Id: 330488173031424
    m_Localized: '{_lobby} {LobbyUI.lobbyNumber}   {LobbyUI.lobbyCount}/{LobbyUI.lobbyCapacity}'
    m_Metadata:
      m_Items:
      - id: 0
  - m_Id: 333020895113216
    m_Localized: '{_requires}<br>{AvatarUI.points}<br>{_points}'
    m_Metadata:
      m_Items:
      - id: 0
  - m_Id: 506887420768256
    m_Localized: '{_time_left}<br>{RoundTimer.displayTime}<br>{_seconds}'
    m_Metadata:
      m_Items:
      - id: 0
  - m_Id: 513712492900352
    m_Localized: '{_lobby} {lobbyNumber}  {readyClients}/{clientsInLobby}'
    m_Metadata:
      m_Items:
      - id: 0
  - m_Id: 528586967085056
    m_Localized: '{points} {_points}'
    m_Metadata:
      m_Items:
      - id: 0
  - m_Id: 531473440960512
    m_Localized: '{_hint} {HintBox.hintNumber}'
    m_Metadata:
      m_Items:
      - id: 0
  - m_Id: 726055483076608
    m_Localized: <b>{doubter}</b> expected <b>{target}</b>'s solution to <b>{doubtType}
      {possibleReturnValue}</b> instead of returning <b>{expectedReturnValue}</b>
      when giving <b>{inputs}</b> as input arguments.<br><br><b>{target}</b>'s solution
      <b>{returnedType} {actualReturnValue}</b>.<br>A correct solution would return
      <b>{correctReturnValue}</b>.
    m_Metadata:
      m_Items:
      - id: 0
  - m_Id: 738393854570496
    m_Localized: <b>{doubter}</b> did not doubt <b>{target}</b>'s solution.
    m_Metadata:
      m_Items:
      - id: 0
  - m_Id: 753994731876352
    m_Localized: '{HintBox.hintBody}'
    m_Metadata:
      m_Items: []
  - m_Id: 758581249437697
    m_Localized: crashed
    m_Metadata:
      m_Items: []
  - m_Id: 758581249437698
    m_Localized: did not compile
    m_Metadata:
      m_Items: []
  - m_Id: 758581249437700
    m_Localized: return
    m_Metadata:
      m_Items: []
  - m_Id: 758581249437701
    m_Localized: returned
    m_Metadata:
      m_Items: []
  - m_Id: 758581249437702
    m_Localized: timed out
    m_Metadata:
      m_Items: []
  - m_Id: 1500940710965248
    m_Localized: 'Expected wrong value:'
    m_Metadata:
      m_Items: []
  - m_Id: 1501550797647872
    m_Localized: 'Instead of the correct value:'
    m_Metadata:
      m_Items: []
  - m_Id: 1563309826895872
    m_Localized: Crash
    m_Metadata:
      m_Items: []
  - m_Id: 1563309927559168
    m_Localized: Not<br>compile
    m_Metadata:
      m_Items: []
  - m_Id: 1563309927559169
    m_Localized: Timeout
    m_Metadata:
      m_Items: []
  - m_Id: 1563309927559170
    m_Localized: Timeout
    m_Metadata:
      m_Items: []
  - m_Id: 1563309927559171
    m_Localized: Return a<br>wrong value
    m_Metadata:
      m_Items: []
  - m_Id: 1610011380281344
    m_Localized: compiled correctly
    m_Metadata:
      m_Items: []
  - m_Id: 1610011426418688
    m_Localized: <b>{doubter}</b> expected <b>{target}</b>'s solution to <b>not compile</b>.<br><br><b>{target}</b>'s
      solution <b>{returnedType}</b>.
    m_Metadata:
      m_Items:
      - id: 0
  references:
    version: 1
    00000000:
      type: {class: SmartFormatTag, ns: UnityEngine.Localization.Metadata, asm: Unity.Localization}
      data:
        m_Entries: 0af02761d400000000f0a7658e2e000000f027c12353000014f02761d400000000f0a70c4c93000000f027c6932c010000f02778e12e010000f0e7e0ebbf010000f0a7ec02cd010000f0a70238d3010000f0673ebfe0010000f0a74d5fe3010000f0276f48e401004ff02761d40000003bf02761d400000000f067b7909f020000f027f75794020000f027ff4bb80500
